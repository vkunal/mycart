{"ast":null,"code":"import _toConsumableArray from \"C:\\\\POC\\\\React-Shopping-Cart-master\\\\Shopping-Cart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\POC\\\\React-Shopping-Cart-master\\\\Shopping-Cart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport Item1 from '../../images/item1.jpg';\nimport Item2 from '../../images/item2.jpg';\nimport Item3 from '../../images/item3.jpg';\nimport Item4 from '../../images/item4.jpg';\nimport Item5 from '../../images/item5.jpg';\nimport Item6 from '../../images/item6.jpg';\nimport { ADD_TO_CART, REMOVE_ITEM, SUB_QUANTITY, ADD_QUANTITY, UPDATE_CART } from '../actions/action-types/cart-actions';\nvar initState = {\n  items: [],\n  addedItems: [],\n  total: 0\n};\n\nvar cartReducer = function cartReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === UPDATE_CART) {\n    return _objectSpread({}, state, {\n      items: _toConsumableArray(action.data),\n      addedItems: [],\n      total: 0\n    });\n  }\n\n  if (action.type === ADD_TO_CART) {\n    var existedItemIndex = state.addedItems.findIndex(function (item) {\n      return action.id === item.id;\n    });\n    var existedItem = state.addedItems.find(function (item) {\n      return action.id === item.id;\n    });\n\n    if (existedItem) {\n      existedItem.quantity += 1;\n      return _objectSpread({}, state, {\n        addedItems: _toConsumableArray(state.addedItems.slice(0, existedItemIndex)).concat([existedItem], _toConsumableArray(state.addedItems.slice(existedItemIndex + 1))),\n        total: state.total + addedItem.price - addedItem.price * addedItem.discount / 100\n      });\n    } else {\n      var _addedItem = state.items.find(function (item) {\n        return item.id === action.id;\n      });\n\n      var newTotal = state.total + _addedItem.price - _addedItem.price * _addedItem.discount / 100;\n      _addedItem.quantity = 1;\n      return _objectSpread({}, state, {\n        addedItems: _toConsumableArray(state.addedItems).concat([_addedItem]),\n        total: newTotal\n      });\n    } // ////===========\n    // let addedItem = state.items.find(item=> item.id === action.id)\n    //   //check if the action id exists in the addedItems\n    //  let existed_item= state.addedItems.find(item=> action.id === item.id)\n    //  if(existed_item)\n    //  {\n    //     addedItem.quantity += 1 \n    //      return{\n    //         ...state,\n    //          total: state.total + addedItem.price - (addedItem.price*addedItem.discount/100)\n    //           }\n    // }\n    //  else{\n    //     addedItem.quantity = 1;\n    //     //calculating the total\n    //     let newTotal = state.total + addedItem.price - (addedItem.price*addedItem.discount/100)\n    //     return{\n    //         ...state,\n    //         addedItems: [...state.addedItems, addedItem],\n    //         total : newTotal\n    //     }\n    // }\n\n  }\n\n  if (action.type === REMOVE_ITEM) {\n    var itemToRemove = state.addedItems.find(function (item) {\n      return action.id === item.id;\n    });\n    var new_items = state.addedItems.filter(function (item) {\n      return action.id !== item.id;\n    }); //calculating the total\n\n    var _newTotal = state.total - itemToRemove.price * itemToRemove.quantity;\n\n    console.log(itemToRemove);\n    return _objectSpread({}, state, {\n      addedItems: new_items,\n      total: _newTotal\n    });\n  } //INSIDE CART COMPONENT\n\n\n  if (action.type === ADD_QUANTITY) {\n    var _addedItem2 = state.items.find(function (item) {\n      return item.id === action.id;\n    });\n\n    _addedItem2.quantity += 1;\n\n    var _newTotal2 = state.total + (_addedItem2.price - _addedItem2.price * _addedItem2.discount / 100);\n\n    return _objectSpread({}, state, {\n      total: _newTotal2\n    });\n  }\n\n  if (action.type === SUB_QUANTITY) {\n    var _addedItem3 = state.items.find(function (item) {\n      return item.id === action.id;\n    }); //if the qt == 0 then it should be removed\n\n\n    if (_addedItem3.quantity === 1) {\n      var _new_items = state.addedItems.filter(function (item) {\n        return item.id !== action.id;\n      });\n\n      var _newTotal3 = state.total - (_addedItem3.price - _addedItem3.price * _addedItem3.discount / 100);\n\n      return _objectSpread({}, state, {\n        addedItems: _new_items,\n        total: _newTotal3\n      });\n    } else {\n      _addedItem3.quantity -= 1;\n\n      var _newTotal4 = state.total - (_addedItem3.price - _addedItem3.price * _addedItem3.discount / 100);\n\n      return _objectSpread({}, state, {\n        total: _newTotal4\n      });\n    }\n  } else {\n    return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["C:\\POC\\React-Shopping-Cart-master\\Shopping-Cart\\src\\components\\reducers\\cartReducer.js"],"names":["Item1","Item2","Item3","Item4","Item5","Item6","ADD_TO_CART","REMOVE_ITEM","SUB_QUANTITY","ADD_QUANTITY","UPDATE_CART","initState","items","addedItems","total","cartReducer","state","action","type","data","existedItemIndex","findIndex","item","id","existedItem","find","quantity","slice","addedItem","price","discount","newTotal","itemToRemove","new_items","filter","console","log"],"mappings":"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","sourcesContent":["import Item1 from '../../images/item1.jpg'\r\nimport Item2 from '../../images/item2.jpg'\r\nimport Item3 from '../../images/item3.jpg'\r\nimport Item4 from '../../images/item4.jpg'\r\nimport Item5 from '../../images/item5.jpg'\r\nimport Item6 from '../../images/item6.jpg'\r\nimport { ADD_TO_CART,REMOVE_ITEM,SUB_QUANTITY,ADD_QUANTITY,UPDATE_CART } from '../actions/action-types/cart-actions'\r\n\r\n\r\nconst initState = {\r\n    items: [],\r\n    addedItems: [],\r\n    total: 0\r\n}\r\n\r\nconst cartReducer= (state = initState,action)=>{\r\n\r\n    if(action.type === UPDATE_CART){\r\n        return {\r\n            ...state,\r\n            items: [...action.data],\r\n            addedItems: [],\r\n            total: 0\r\n        }\r\n    }\r\n   \r\n    if(action.type === ADD_TO_CART){\r\n        let existedItemIndex = state.addedItems.findIndex(item => action.id === item.id)\r\n        let existedItem = state.addedItems.find(item => action.id === item.id)\r\n        if(existedItem){\r\n            existedItem.quantity += 1\r\n            return{\r\n                ...state,\r\n                addedItems: [...state.addedItems.slice(0, existedItemIndex), existedItem, ...state.addedItems.slice(existedItemIndex+1)],\r\n                total: state.total + addedItem.price - (addedItem.price*addedItem.discount/100)\r\n            }\r\n        }else{\r\n            let addedItem = state.items.find(item => item.id === action.id)\r\n            let newTotal = state.total + addedItem.price - (addedItem.price*addedItem.discount/100)\r\n                addedItem.quantity = 1;\r\n            return{\r\n                ...state,\r\n                addedItems: [...state.addedItems, addedItem],\r\n                total: newTotal\r\n            }\r\n        }\r\n        \r\n        // ////===========\r\n        // let addedItem = state.items.find(item=> item.id === action.id)\r\n        //   //check if the action id exists in the addedItems\r\n        //  let existed_item= state.addedItems.find(item=> action.id === item.id)\r\n        //  if(existed_item)\r\n        //  {\r\n        //     addedItem.quantity += 1 \r\n        //      return{\r\n        //         ...state,\r\n        //          total: state.total + addedItem.price - (addedItem.price*addedItem.discount/100)\r\n        //           }\r\n        // }\r\n        //  else{\r\n        //     addedItem.quantity = 1;\r\n        //     //calculating the total\r\n        //     let newTotal = state.total + addedItem.price - (addedItem.price*addedItem.discount/100)\r\n            \r\n        //     return{\r\n        //         ...state,\r\n        //         addedItems: [...state.addedItems, addedItem],\r\n        //         total : newTotal\r\n        //     }\r\n            \r\n        // }\r\n    }\r\n    if(action.type === REMOVE_ITEM){\r\n        let itemToRemove= state.addedItems.find(item=> action.id === item.id)\r\n        let new_items = state.addedItems.filter(item=> action.id !== item.id)\r\n        \r\n        //calculating the total\r\n        let newTotal = state.total - (itemToRemove.price * itemToRemove.quantity )\r\n        console.log(itemToRemove)\r\n        return{\r\n            ...state,\r\n            addedItems: new_items,\r\n            total: newTotal\r\n        }\r\n    }\r\n    //INSIDE CART COMPONENT\r\n    if(action.type=== ADD_QUANTITY){\r\n        let addedItem = state.items.find(item=> item.id === action.id)\r\n          addedItem.quantity += 1 \r\n          let newTotal = state.total + (addedItem.price - (addedItem.price*addedItem.discount/100));\r\n          return{\r\n              ...state,\r\n              total: newTotal\r\n          }\r\n    }\r\n    if(action.type=== SUB_QUANTITY){  \r\n        let addedItem = state.items.find(item=> item.id === action.id) \r\n        //if the qt == 0 then it should be removed\r\n        if(addedItem.quantity === 1){\r\n            let new_items = state.addedItems.filter(item=>item.id !== action.id)\r\n            let newTotal = state.total - (addedItem.price - (addedItem.price*addedItem.discount/100));\r\n            return{\r\n                ...state,\r\n                addedItems: new_items,\r\n                total: newTotal\r\n            }\r\n        }\r\n        else {\r\n            addedItem.quantity -= 1\r\n            let newTotal = state.total - (addedItem.price - (addedItem.price*addedItem.discount/100));\r\n            return{\r\n                ...state,\r\n                total: newTotal\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    \r\n  else{\r\n    return state\r\n    }\r\n    \r\n}\r\n\r\nexport default cartReducer\r\n"]},"metadata":{},"sourceType":"module"}