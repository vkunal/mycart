{"ast":null,"code":"import _toConsumableArray from \"C:\\\\POC\\\\Adobe\\\\Shopping-Cart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\POC\\\\Adobe\\\\Shopping-Cart\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { ADD_TO_CART, REMOVE_ITEM, SUB_QUANTITY, ADD_QUANTITY, UPDATE_CART } from '../actions/action-types/cart-actions';\nvar initState = {\n  items: []\n};\n\nvar cartReducer = function cartReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === UPDATE_CART) {\n    return _objectSpread({}, state, {\n      items: _toConsumableArray(action.data),\n      total: 0\n    });\n  }\n\n  if (action.type === ADD_TO_CART) {\n    var existedItemIndex = state.addedItems.findIndex(function (item) {\n      return action.id === item.id;\n    });\n    var existedItem = state.addedItems.find(function (item) {\n      return action.id === item.id;\n    });\n\n    if (existedItem) {\n      existedItem.quantity += 1;\n      return _objectSpread({}, state, {\n        addedItems: _toConsumableArray(state.addedItems.slice(0, existedItemIndex)).concat([existedItem], _toConsumableArray(state.addedItems.slice(existedItemIndex + 1))),\n        total: state.total + existedItem.price - existedItem.price * existedItem.discount / 100\n      });\n    } else {\n      var addedItem = state.items.find(function (item) {\n        return item.id === action.id;\n      });\n      var newTotal = state.total + addedItem.price - addedItem.price * addedItem.discount / 100;\n      addedItem.quantity = 1;\n      return _objectSpread({}, state, {\n        addedItems: _toConsumableArray(state.addedItems).concat([addedItem]),\n        total: newTotal\n      });\n    }\n  }\n\n  if (action.type === REMOVE_ITEM) {\n    var itemToRemove = state.addedItems.find(function (item) {\n      return action.id === item.id;\n    });\n    var new_items = state.addedItems.filter(function (item) {\n      return action.id !== item.id;\n    }); //calculating the total\n\n    var _newTotal = state.total - itemToRemove.price * itemToRemove.quantity;\n\n    console.log(itemToRemove);\n    return _objectSpread({}, state, {\n      addedItems: new_items,\n      total: _newTotal\n    });\n  } //INSIDE CART COMPONENT\n\n\n  if (action.type === ADD_QUANTITY) {\n    var _addedItem = state.items.find(function (item) {\n      return item.id === action.id;\n    });\n\n    _addedItem.quantity += 1;\n\n    var _newTotal2 = state.total + (_addedItem.price - _addedItem.price * _addedItem.discount / 100);\n\n    return _objectSpread({}, state, {\n      total: _newTotal2\n    });\n  }\n\n  if (action.type === SUB_QUANTITY) {\n    var _addedItem2 = state.items.find(function (item) {\n      return item.id === action.id;\n    }); //if the qt == 0 then it should be removed\n\n\n    if (_addedItem2.quantity === 1) {\n      var _new_items = state.addedItems.filter(function (item) {\n        return item.id !== action.id;\n      });\n\n      var _newTotal3 = state.total - (_addedItem2.price - _addedItem2.price * _addedItem2.discount / 100);\n\n      return _objectSpread({}, state, {\n        addedItems: _new_items,\n        total: _newTotal3\n      });\n    } else {\n      _addedItem2.quantity -= 1;\n\n      var _newTotal4 = state.total - (_addedItem2.price - _addedItem2.price * _addedItem2.discount / 100);\n\n      return _objectSpread({}, state, {\n        total: _newTotal4\n      });\n    }\n  } else {\n    return state;\n  }\n}; // const cartIntialState = {\n//     addedItems: [],\n//     total: 0\n// }\n// const addTocart = (state = initState, action) => {\n// }\n\n\nexport default cartReducer;","map":{"version":3,"sources":["C:\\POC\\Adobe\\Shopping-Cart\\src\\reducers\\cartReducer.js"],"names":["ADD_TO_CART","REMOVE_ITEM","SUB_QUANTITY","ADD_QUANTITY","UPDATE_CART","initState","items","cartReducer","state","action","type","data","total","existedItemIndex","addedItems","findIndex","item","id","existedItem","find","quantity","slice","price","discount","addedItem","newTotal","itemToRemove","new_items","filter","console","log"],"mappings":"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","sourcesContent":["import { ADD_TO_CART, REMOVE_ITEM, SUB_QUANTITY, ADD_QUANTITY, UPDATE_CART } from '../actions/action-types/cart-actions'\r\n\r\n\r\nconst initState = {\r\n    items: [],\r\n\r\n}\r\n\r\nconst cartReducer = (state = initState, action) => {\r\n\r\n    if (action.type === UPDATE_CART) {\r\n        return {\r\n            ...state,\r\n            items: [...action.data],\r\n          \r\n            total: 0\r\n        }\r\n    }\r\n\r\n    if (action.type === ADD_TO_CART) {\r\n        let existedItemIndex = state.addedItems.findIndex(item => action.id === item.id)\r\n        let existedItem = state.addedItems.find(item => action.id === item.id)\r\n        if (existedItem) {\r\n            existedItem.quantity += 1\r\n            return {\r\n                ...state,\r\n                addedItems: [...state.addedItems.slice(0, existedItemIndex), existedItem, ...state.addedItems.slice(existedItemIndex + 1)],\r\n                total: state.total + existedItem.price - (existedItem.price * existedItem.discount / 100)\r\n            }\r\n        } else {\r\n            let addedItem = state.items.find(item => item.id === action.id)\r\n            let newTotal = state.total + addedItem.price - (addedItem.price * addedItem.discount / 100)\r\n            addedItem.quantity = 1;\r\n            return {\r\n                ...state,\r\n                addedItems: [...state.addedItems, addedItem],\r\n                total: newTotal\r\n            }\r\n        }\r\n    }\r\n    if (action.type === REMOVE_ITEM) {\r\n        let itemToRemove = state.addedItems.find(item => action.id === item.id)\r\n        let new_items = state.addedItems.filter(item => action.id !== item.id)\r\n\r\n        //calculating the total\r\n        let newTotal = state.total - (itemToRemove.price * itemToRemove.quantity)\r\n        console.log(itemToRemove)\r\n        return {\r\n            ...state,\r\n            addedItems: new_items,\r\n            total: newTotal\r\n        }\r\n    }\r\n    //INSIDE CART COMPONENT\r\n    if (action.type === ADD_QUANTITY) {\r\n        let addedItem = state.items.find(item => item.id === action.id)\r\n        addedItem.quantity += 1\r\n        let newTotal = state.total + (addedItem.price - (addedItem.price * addedItem.discount / 100));\r\n        return {\r\n            ...state,\r\n            total: newTotal\r\n        }\r\n    }\r\n    if (action.type === SUB_QUANTITY) {\r\n        let addedItem = state.items.find(item => item.id === action.id)\r\n        //if the qt == 0 then it should be removed\r\n        if (addedItem.quantity === 1) {\r\n            let new_items = state.addedItems.filter(item => item.id !== action.id)\r\n            let newTotal = state.total - (addedItem.price - (addedItem.price * addedItem.discount / 100));\r\n            return {\r\n                ...state,\r\n                addedItems: new_items,\r\n                total: newTotal\r\n            }\r\n        }\r\n        else {\r\n            addedItem.quantity -= 1\r\n            let newTotal = state.total - (addedItem.price - (addedItem.price * addedItem.discount / 100));\r\n            return {\r\n                ...state,\r\n                total: newTotal\r\n            }\r\n        }\r\n\r\n    }\r\n    else {\r\n        return state\r\n    }\r\n\r\n}\r\n\r\n// const cartIntialState = {\r\n//     addedItems: [],\r\n//     total: 0\r\n\r\n// }\r\n\r\n// const addTocart = (state = initState, action) => {\r\n\r\n// }\r\n\r\nexport default cartReducer\r\n"]},"metadata":{},"sourceType":"module"}